tinymce.PluginManager.add("colorpicker", function(a) {
	function b(b, c) {
		var $POS = 0;
		var $BODY = (window.opera) ? (document.compatMode == "CSS1Compat" ? $('html') : $('body')) : $('html,body');
		
		function pos_swift(s){
			if(s){
				$BODY.animate({ scrollTop: $POS }, 0);
			}else{
				var NOWTOP = parseInt(document.body.scrollTop, 10) ||parseInt(document.documentElement.scrollTop, 10);
				
				if(NOWTOP > 0){
					$POS = NOWTOP;
				}
				
				$BODY.animate({ scrollTop: 0 }, 0);
			}
		}
		
		function d(a) {
			var b = new tinymce.util.Color(a), c = b.toRgb();
			f.fromJSON({
				r : c.r,
				g : c.g,
				b : c.b,
				hex : b.toHex().substr(1)
			}), e(b.toHex())
		}

		function e(a) {
			pos_swift(false);
			
			f.find("#preview")[0].getEl().style.background = a
		}

		var f = a.windowManager.open({
			title : "Color",
			items : {
				type : "container",
				layout : "flex",
				direction : "row",
				align : "stretch",
				padding : 5,
				spacing : 10,
				items : [{
					type : "colorpicker",
					value : c,
					onchange : function() {
						var a = this.rgb();
						f && (f.find("#r").value(a.r), f.find("#g").value(a.g), f.find("#b").value(a.b), f.find("#hex").value(this.value().substr(1)), e(this.value()))
					}
				}, {
					type : "form",
					padding : 0,
					labelGap : 5,
					defaults : {
						type : "textbox",
						size : 7,
						value : "0",
						flex : 1,
						spellcheck : !1,
						onchange : function() {
							var a, b, c = f.find("colorpicker")[0];
							return a = this.name(), b = this.value(), "hex" == a ? ( b = "#" + b, d(b),
							void  c.value(b)) : ( b = {
								r : f.find("#r").value(),
								g : f.find("#g").value(),
								b : f.find("#b").value()
							}, c.value(b),
							void  d(b))
						}
					},
					items : [{
						name : "r",
						label : "R",
						autofocus : 1
					}, {
						name : "g",
						label : "G"
					}, {
						name : "b",
						label : "B"
					}, {
						name : "hex",
						label : "#",
						value : "000000"
					}, {
						name : "preview",
						type : "container",
						border : 1
					}]
				}]
			},
			onSubmit : function() {
				pos_swift(true);
				b("#" + this.toJSON().hex)
			}
		});
		d(c)
	}
	a.settings.color_picker_callback || (a.settings.color_picker_callback = b)
}); 